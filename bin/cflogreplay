#!/usr/bin/env node

var keepalive = require('agentkeepalive');
var split = require('split');
var reader = require('..');
var args = require('minimist')(process.argv.slice(2));

var baseurl = args._[0];
if (!baseurl || baseurl.indexOf('http') == -1) {
  console.error('Usage: cflogreplay <baseurl> [--concurrency=<n>]');
  process.exit(1);
}

var hwm = parseInt(args.concurrency) ? parseInt(args.concurrency) : null;

var agentType = /http:/.test(baseurl)? keepalive : keepalive.HttpsAgent;
var agent = new agentType({
    keepAlive: true,
    maxSockets: Math.ceil(require('os').cpus().length * 16),
    keepAliveTimeout: 60000
});

var generatePath = reader.GeneratePath('cloudfront');
var reqStream = reader.RequestStream({ baseurl: baseurl, agent: agent, hwm: hwm });
process.stdin
    .pipe(split())
    .pipe(generatePath)
    .pipe(reqStream)
    .on('error', function(err) {
        console.error(err);
        process.exit(1);
    })
    .on('data', function(data) {
        console.log(data.body.toString('utf8'));
    });

